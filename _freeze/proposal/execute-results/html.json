{
  "hash": "9c1c561132eb75a789842b1da6050722",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Forecasting S&P 500 Returns on Multiple Horizons Using LSTM\"\nsubtitle: \"Proposal\"\nauthor: \n  - name: \"Macdonald-Kuthalaraja - Trevor Macdonald, Nandakumar Kuthalaraja \"\n    affiliations:\n      - name: \"College of Information Science, University of Arizona\"\ndescription: \"Forecasting S&P 500 Returns on Multiple Horizons Using LSTM\"\nformat:\n  html:\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: true\n    embed-resources: true\neditor: visual\ncode-annotations: hover\nexecute:\n  warning: false\njupyter: python3\n---\n\n::: {#set-up .cell message='false' execution_count=1}\n``` {.python .cell-code}\nimport numpy as np\nimport pandas as pd\nimport yfinance as yf\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom sklearn.preprocessing import StandardScaler\nfrom sklearn.metrics import mean_squared_error, mean_absolute_error\nfrom keras.models import Sequential\nfrom keras.layers import LSTM, Dense, Dropout\nfrom keras.callbacks import EarlyStopping\n```\n:::\n\n\n## Dataset\n\n::: {#load-dataset .cell message='false' execution_count=2}\n``` {.python .cell-code}\nprint(\"Downloading SPX data...\")\ndata = yf.download('^GSPC', start='2014-01-01', end='2024-12-31')\n\n# Flatten MultiIndex columns if necessary\nif isinstance(data.columns, pd.MultiIndex):\n    data.columns = ['_'.join(col).strip() for col in data.columns.values]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDownloading SPX data...\n```\n:::\n:::\n\n\nA brief description of your dataset including its provenance, dimensions, etc. as well as the reason why you chose this dataset.\n\nMake sure to load the data and use inline code for some of this information.\n\n## Questions\n\nThe four questions you want to answer.\n\nQ1. Can a Long Short-Term Memory (LSTM) model accurately forecast short, medium, or long term S&P 500 returns?\n\nQ2. How does forecast accuracy degrade as a function of prediction horizon, and what does this suggest about LSTM’s ability to model longer term financial trends?\n\nQ3. How well can we classify each trading day in 2024 into low, medium, or high volatility regimes based on recent price action and market indicators?\n\nQ4. How can hierarchical clustering organize S&P 500 stocks into a taxonomy based on multi-factor risk or return exposures?\n\n## Analysis plan (Q1, Q2)\n\n-   The analysis will begin with acquisition of data from yahoo finance. We will have 4 tickers and merge into one data frame with preferred variables, features, etc.\n\n-   The variables will receive a basic visual inspection and dimensional analysis\n\n-   The data will be cleaned and standardized to produce a \"tidy\" set to be split for training LSTM model.\n\n-   The model will be tested on unseen data set and results recorded.\n\n-   The performance will evaluated for each time horizon and compared using plot visuals.\n\n| Ticker   | Description                           |\n|----------|---------------------------------------|\n| `^GSPC`  | S&P 500 Index (price and volume data) |\n| `^VIX`   | 30-day implied volatility             |\n| `^VVIX`  | Volatility of volatility              |\n| `^VIX9D` | 9-day implied volatility              |\n\n| Variable | Description                               |\n|----------|-------------------------------------------|\n| `Open`   | Opening price of SPX                      |\n| `High`   | Daily high price of SPX                   |\n| `Low`    | Daily low price of SPX                    |\n| `Close`  | Daily closing price of SPX                |\n| `Volume` | Daily trading volume of SPX               |\n| `VIX`    | Implied volatility index (30-day horizon) |\n| `VVIX`   | Volatility-of-volatility index            |\n| `VIX9D`  | 9-day implied volatility index            |\n\n| Features | Description |\n|----|----|\n| `log_return_t` | Log returns of SPX: `log(Close_t / Close_{t-1})` |\n| `ParkinsonVol` | Realized volatility from high/low: `ln(High/Low)^2 / (4ln2)` |\n| `EMA_10`, `SMA_21` | Short-term and medium-term trend indicators |\n| `lag_volatility` | Lagged daily volatility measures (RV, VIX, VVIX) |\n\n| Target Variable | Definition                                       |\n|-----------------|--------------------------------------------------|\n| `Return_t+1`    | 1-day ahead return: `pct_change(1).shift(-1)`    |\n| `Return_t+5`    | 5-day ahead return: `pct_change(5).shift(-5)`    |\n| `Return_t+21`   | 21-day ahead return: `pct_change(21).shift(-21)` |\n\n| Step | Description |\n|----|----|\n| **Data Acquisition** | Download OHLCV for `^GSPC(SPX)`, and volatility indices: `^VIX`, `^VVIX`, `^VIX9D` via `yfinance` |\n| **Data Cleaning/ Inspection** | Align, index, remove nulls, filter data for consistency |\n| **Feature Engineering/Standardization** | Construct technical indicators, lag features, and volatility-based predictors |\n| **Train/Test Split** | 80/20 time based split |\n| **Model Architecture** | LSTM |\n| **Evaluation Metrics** | MAE and RMSE for each forecast horizon |\n\n\n\n## Analysis plan (Q3)\n\nThis uses Supervised Machine Learning Methods for exploring\n\n1.\tFeature Engineering:\nCalculate recent price action and market indicators (e.g., rolling volatility, intraday range, moving averages, volume, VIX).\n2.\tTarget Creation:\nLabel each trading day as “low”, “medium”, or “high” volatility based on daily realized volatility bins (e.g., using tertiles or quantiles).\n3.\tModel Training:\nUse supervised learning models (e.g., decision tree, random forest, XGBoost) to classify the volatility regime from engineered features.\n4.\tEvaluation:\nEvaluate classification results with accuracy, confusion matrix, and analyze which features most influence volatility regime assignment.\n\n| Step                    | Description                                                                                   |\n|-------------------------|-----------------------------------------------------------------------------------------------|\n| Prepare Features        | Gather recent price action (returns, volatility) and market indicators for each trading day.  |\n| Create Volatility Classes | Divide days into low, medium, and high volatility using quantiles or thresholds.              |\n| Train Classifier        | Fit a supervised learning model to predict volatility class from the features.                 |\n| Evaluate Model          | Assess model accuracy and review which features are most predictive.                           |\n\n\n## Analysis plan (Q4)\n\nThis uses Unsupervised Machine Learning Methods for exploring\n\n1. Collect and preprocess S&P 500 stock data for 2024, calculating each stock’s exposure to multiple risk and return factors (e.g., momentum, value, size, volatility).\n2. Construct a feature matrix where each row represents a stock and columns represent factor exposures.\n3. Apply hierarchical clustering (such as Ward’s method) to the feature matrix to group stocks with similar profiles.\n4. Visualize the dendrogram and analyze the resulting clusters to interpret the taxonomy and identify meaningful stock groupings.\n\n| Step         | Description                                                                                 |\n|--------------|---------------------------------------------------------------------------------------------|\n| Data Prep    | Collect and preprocess S&P 500 stock data for 2024, computing multi-factor exposures.       |\n| Matrix Build | Create a matrix with stocks as rows and factor exposures as columns.                        |\n| Clustering   | Perform hierarchical clustering (e.g., Ward’s method) on the feature matrix.                |\n| Interpretation | Visualize and interpret the dendrogram to analyze and describe stock group taxonomy.       |\n\n",
    "supporting": [
      "proposal_files"
    ],
    "filters": [],
    "includes": {}
  }
}