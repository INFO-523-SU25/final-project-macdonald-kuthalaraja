{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "aac7461c",
   "metadata": {},
   "source": [
    "---\n",
    "title: \"Navigating the S&P 500 with Machine Learning: What Can We Discover?\"\n",
    "subtitle: \"Proposal\"\n",
    "author: \n",
    "  - name: \"Macdonald-Kuthalaraja - Trevor Macdonald, Nandakumar Kuthalaraja \"\n",
    "    affiliations:\n",
    "      - name: \"College of Information Science, University of Arizona\"\n",
    "description: \"Machine learning gives us smart tools to find patterns, make predictions, and understand complicated trends in the stock market. By using these techniques with S&P 500 data, we can answer important questions about where the market might go, how risky it is, and how stocks relate to each other. This project explores new methods—from deep learning (which helps predict future returns), to models that sort days by how volatile they are, to clustering methods that group similar stocks together. With these tools, we aim to discover fresh insights about the S&P 500 in 2024.\"\n",
    "format:\n",
    "  html:\n",
    "    code-tools: true\n",
    "    code-overflow: wrap\n",
    "    code-line-numbers: true\n",
    "    embed-resources: true\n",
    "editor: visual\n",
    "code-annotations: hover\n",
    "execute:\n",
    "  warning: false\n",
    "jupyter: python3\n",
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "Set-Up",
   "metadata": {
    "message": false
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/attr_value.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/tensor.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/resource_handle.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/tensor_shape.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/types.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/full_type.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/function.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/node_def.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/op_def.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/graph.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/graph_debug_info.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/versions.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/protobuf/config.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at xla/tsl/protobuf/coordination_config.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/cost_graph.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/step_stats.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/allocation_description.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/framework/tensor_description.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/protobuf/cluster.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n",
      "/opt/homebrew/Caskroom/miniconda/base/envs/py38/lib/python3.13/site-packages/google/protobuf/runtime_version.py:98: UserWarning:\n",
      "\n",
      "Protobuf gencode version 5.28.3 is exactly one major version older than the runtime version 6.31.1 at tensorflow/core/protobuf/debug.proto. Please update the gencode to avoid compatibility violations in the next runtime release.\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#| label: Set Up\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import yfinance as yf\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "from sklearn.preprocessing import StandardScaler\n",
    "from sklearn.metrics import mean_squared_error, mean_absolute_error\n",
    "from keras.models import Sequential\n",
    "from keras.layers import LSTM, Dense, Dropout\n",
    "from keras.callbacks import EarlyStopping"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1b957e64",
   "metadata": {},
   "source": [
    "## Dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "load-dataset",
   "metadata": {
    "message": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Downloading SPX data...\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/var/folders/3x/08vpthxj5ls8s2wl1sb_8gn40000gp/T/ipykernel_74089/1029344709.py:2: FutureWarning:\n",
      "\n",
      "YF.download() has changed argument auto_adjust default to True\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\r",
      "[*********************100%***********************]  1 of 1 completed"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n"
     ]
    }
   ],
   "source": [
    "#| label: load-dataset\n",
    "\n",
    "print(\"Downloading SPX data...\")\n",
    "data = yf.download('^GSPC', start='2014-01-01', end='2024-12-31')\n",
    "\n",
    "# Flatten MultiIndex columns if necessary\n",
    "if isinstance(data.columns, pd.MultiIndex):\n",
    "    data.columns = ['_'.join(col).strip() for col in data.columns.values]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "dd9d6979",
   "metadata": {},
   "source": [
    "This dataset contains daily historical price data for the S&P 500 index (^GSPC), downloaded using the yfinance Python package. It spans from January 1, 2014 to December 31, 2024s.\n",
    "\n",
    "The dataset includes the following key variables:\n",
    "\t•\tOpen: Opening price of the index each day\n",
    "\t•\tHigh: Highest price during the trading day\n",
    "\t•\tLow: Lowest price during the trading day\n",
    "\t•\tClose: Closing price of the day\n",
    "\n",
    "We chose the S&P 500 dataset because it serves as a benchmark for the U.S. stock market, reflecting the performance of 500 leading publicly traded companies. This makes it ideal for exploring machine learning techniques in financial time series analysis, including trend prediction, volatility classification, and return forecasting.\n",
    "\n",
    "With these techniques in proposal, we aim to uncover specific insights such as improved short- and long-term return forecasts from LSTM models, clearer volatility regime patterns via classification, and meaningful stock groupings through clustering of factor exposures. By quantifying accuracy across forecast horizons, identifying key predictors of risk regimes, and mapping stocks by shared characteristics, we move beyond general findings to actionable understanding of market behavior in 2024.\n",
    "\n",
    "## Questions\n",
    "\n",
    "The four questions you want to answer.\n",
    "\n",
    "Q1. Can a Long Short-Term Memory (LSTM) model accurately forecast short, medium, or long term S&P 500 returns?\n",
    "\n",
    "Q2. How does forecast accuracy degrade as a function of prediction horizon, and what does this suggest about LSTM’s ability to model longer term financial trends?\n",
    "\n",
    "Q3. How well can we classify each trading day in 2024 into low, medium, or high volatility regimes based on recent price action and market indicators?\n",
    "\n",
    "Q4. How can hierarchical clustering organize S&P 500 stocks into a taxonomy based on multi-factor risk or return exposures?\n",
    "\n",
    "## Analysis plan (Q1, Q2)\n",
    "\n",
    "-   The analysis will begin with acquisition of data from yahoo finance. We will have 4 tickers and merge into one data frame with preferred variables, features, etc.\n",
    "\n",
    "-   The variables will receive a basic visual inspection and dimensional analysis\n",
    "\n",
    "-   The data will be cleaned and standardized to produce a \"tidy\" set to be split for training LSTM model.\n",
    "\n",
    "-   The model will be tested on unseen data set and results recorded.\n",
    "\n",
    "-   The performance will evaluated for each time horizon and compared using plot visuals.\n",
    "\n",
    "| Ticker   | Description                           |\n",
    "|----------|---------------------------------------|\n",
    "| `^GSPC`  | S&P 500 Index (price and volume data) |\n",
    "| `^VIX`   | 30-day implied volatility             |\n",
    "| `^VVIX`  | Volatility of volatility              |\n",
    "| `^VIX9D` | 9-day implied volatility              |\n",
    "\n",
    "| Variable | Description                               |\n",
    "|----------|-------------------------------------------|\n",
    "| `Open`   | Opening price of SPX                      |\n",
    "| `High`   | Daily high price of SPX                   |\n",
    "| `Low`    | Daily low price of SPX                    |\n",
    "| `Close`  | Daily closing price of SPX                |\n",
    "| `Volume` | Daily trading volume of SPX               |\n",
    "| `VIX`    | Implied volatility index (30-day horizon) |\n",
    "| `VVIX`   | Volatility-of-volatility index            |\n",
    "| `VIX9D`  | 9-day implied volatility index            |\n",
    "\n",
    "| Features | Description |\n",
    "|----|----|\n",
    "| `log_return_t` | Log returns of SPX: `log(Close_t / Close_{t-1})` |\n",
    "| `ParkinsonVol` | Realized volatility from high/low: `ln(High/Low)^2 / (4ln2)` |\n",
    "| `EMA_10`, `SMA_21` | Short-term and medium-term trend indicators |\n",
    "| `lag_volatility` | Lagged daily volatility measures (RV, VIX, VVIX) |\n",
    "\n",
    "| Target Variable | Definition                                       |\n",
    "|-----------------|--------------------------------------------------|\n",
    "| `Return_t+1`    | 1-day ahead return: `pct_change(1).shift(-1)`    |\n",
    "| `Return_t+5`    | 5-day ahead return: `pct_change(5).shift(-5)`    |\n",
    "| `Return_t+21`   | 21-day ahead return: `pct_change(21).shift(-21)` |\n",
    "\n",
    "| Step | Description |\n",
    "|----|----|\n",
    "| **Data Acquisition** | Download OHLCV for `^GSPC(SPX)`, and volatility indices: `^VIX`, `^VVIX`, `^VIX9D` via `yfinance` |\n",
    "| **Data Cleaning/ Inspection** | Align, index, remove nulls, filter data for consistency |\n",
    "| **Feature Engineering/Standardization** | Construct technical indicators, lag features, and volatility-based predictors |\n",
    "| **Train/Test Split** | 80/20 time based split |\n",
    "| **Model Architecture** | LSTM |\n",
    "| **Evaluation Metrics** | MAE and RMSE for each forecast horizon |\n",
    "\n",
    "We selected Long Short-Term Memory (LSTM) networks because they are specifically designed to capture long-term dependencies in sequential data, making them ideal for time series forecasting like stock prices. Unlike simpler models such as linear regression or basic moving averages, LSTMs can learn patterns across varying time lags and handle noisy, non-linear trends that are common in financial markets. This allows for potentially more accurate forecasts of market movements compared to models that assume fixed, short-term dependencies.\n",
    "\n",
    "## Analysis plan (Q3)\n",
    "\n",
    "This uses Supervised Machine Learning Methods for exploring\n",
    "\n",
    "1.\tFeature Engineering:\n",
    "Calculate recent price action and market indicators (e.g., rolling volatility, intraday range, moving averages, volume, VIX).\n",
    "2.\tTarget Creation:\n",
    "Label each trading day as “low”, “medium”, or “high” volatility based on daily realized volatility bins (e.g., using tertiles or quantiles).\n",
    "3.\tModel Training:\n",
    "Use supervised learning models (e.g., decision tree, random forest, XGBoost) to classify the volatility regime from engineered features.\n",
    "4.\tEvaluation:\n",
    "Evaluate classification results with accuracy, confusion matrix, and analyze which features most influence volatility regime assignment.\n",
    "\n",
    "| Step                    | Description                                                                                   |\n",
    "|-------------------------|-----------------------------------------------------------------------------------------------|\n",
    "| Prepare Features        | Gather recent price action (returns, volatility) and market indicators for each trading day.  |\n",
    "| Create Volatility Classes | Divide days into low, medium, and high volatility using quantiles or thresholds.              |\n",
    "| Train Classifier        | Fit a supervised learning model to predict volatility class from the features.                 |\n",
    "| Evaluate Model          | Assess model accuracy and review which features are most predictive.                           |\n",
    "\n",
    "Potential Variables\n",
    "\n",
    "| Variable             | Description                                              |\n",
    "|----------------------|---------------------------------------------------------|\n",
    "| prev_day_return      | Return from the previous trading day                    |\n",
    "| rolling_std_5        | 5-day rolling standard deviation (volatility)           |\n",
    "| rolling_std_21       | 21-day (1-month) rolling standard deviation             |\n",
    "| ATR_14               | 14-day Average True Range (volatility indicator)        |\n",
    "| volume_zscore_5      | 5-day Z-score of trading volume                         |\n",
    "| RSI_14               | 14-day Relative Strength Index                          |\n",
    "| VIX                  | Implied volatility index (if available for the SPX)     |\n",
    "\n",
    "## Analysis plan (Q4)\n",
    "\n",
    "This uses Unsupervised Machine Learning Methods for exploring\n",
    "\n",
    "1. Collect and preprocess S&P 500 stock data for 2024, calculating each stock’s exposure to multiple risk and return factors (e.g., momentum, value, size, volatility).\n",
    "2. Construct a feature matrix where each row represents a stock and columns represent factor exposures.\n",
    "3. Apply hierarchical clustering (such as Ward’s method) to the feature matrix to group stocks with similar profiles.\n",
    "4. Visualize the dendrogram and analyze the resulting clusters to interpret the taxonomy and identify meaningful stock groupings.\n",
    "\n",
    "| Step         | Description                                                                                 |\n",
    "|--------------|---------------------------------------------------------------------------------------------|\n",
    "| Data Prep    | Collect and preprocess S&P 500 stock data for 2024, computing multi-factor exposures.       |\n",
    "| Matrix Build | Create a matrix with stocks as rows and factor exposures as columns.                        |\n",
    "| Clustering   | Perform hierarchical clustering (e.g., Ward’s method) on the feature matrix.                |\n",
    "| Interpretation | Visualize and interpret the dendrogram to analyze and describe stock group taxonomy.       |\n",
    "\n",
    "Potential Variables for Use\n",
    "\n",
    "| Variable                | Description                                                   |\n",
    "|-------------------------|---------------------------------------------------------------|\n",
    "| avg_return_2024         | Average daily return in 2024                                  |\n",
    "| volatility_2024         | Standard deviation of daily returns in 2024                   |\n",
    "| momentum_3m             | 3-month price momentum (percent change)                       |\n",
    "| value_ratio             | Price-to-earnings (P/E) or price-to-book (P/B) ratio          |\n",
    "| size                    | Market capitalization                                        |\n",
    "| beta_market             | Beta (sensitivity to S&P 500 index)                           |\n",
    "| dividend_yield          | Dividend yield                                                |\n",
    "| sector                  | Categorical variable for sector (for interpretation/grouping) |\n",
    "| skewness_2024           | Skewness of daily returns in 2024                             |\n",
    "| kurtosis_2024           | Kurtosis of daily returns in 2024                             |"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3",
   "path": "/opt/homebrew/Caskroom/miniconda/base/envs/py38/share/jupyter/kernels/python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
